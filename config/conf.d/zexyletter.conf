# pro
server {
    listen       80;
    # TODO 正式ドメイン決まったらここ設定してください
    server_name letter.zexy.in

    # ファイルアップロードサイズ
    client_max_body_size 2M;
    # バッファサイズ
    client_body_buffer_size    128k;

    # ## メンテナンスモードの設定
    #include conf.d/mainte.inc;

    # cloudfrontリダイレクト
    #include conf.d/cloudfront.inc;
    location ~ ^/images/ {
      root   /zexyletter/public/;
      break;
    }
    location /elb-status {
      access_log off;
      return 200;
    }

    location / {
      ## ベーシック認証一時対応
      auth_basic "Restricted";
      auth_basic_user_file /etc/nginx/conf.d/.htpasswd;

      # proxy_set_header X-FORWARDED_PROTO https;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_pass http://rails:3000;
      proxy_redirect off;
      port_in_redirect off;
      proxy_read_timeout 200;
      expires 0;
      break;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   html;
    }
}

# stg
server {
    #listen       443;
    listen       80 default_server;
    #server_name example.com

    # ファイルアップロードサイズ
    client_max_body_size 2M;
    # バッファサイズ
    client_body_buffer_size    128k;

    #charset utf-8;
    #access_log  logs/host.access.log  main;

    # ## メンテナンスモードの設定
    #include conf.d/mainte.inc;

    # cloudfrontリダイレクト
    #include conf.d/cloudfront.inc;
    #location ~ ^/system|images/ {
    #  root   /home/pro/qs4-ank/public/;
    #  break;
    #}
    location /elb-status {
      access_log off;
      return 200;
    }

    location / {
      auth_basic "Restricted";
      auth_basic_user_file /etc/nginx/conf.d/.htpasswd;

      # proxy_set_header X-FORWARDED_PROTO https;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_pass http://rails:3000;
      proxy_redirect off;
      port_in_redirect off;
      proxy_read_timeout 200;
      expires 0;
      break;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   html;
    }
}
